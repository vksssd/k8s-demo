name: CI/CD Pipeline

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v2
        
        - name: Set up Go
          uses: actions/setup-go@v2
          with:
            go-version: 1.21.3
        
        - name: Build
          run: |
            cd cmd
            go build -o ../main
            cd ..
            
        - name: Build Docker image
          run: docker build -t ${{secrets.DOCKER_USERNAME}}/golang-app:latest .

        - name: Log in to Docker Hub
          run: echo ${{secrets.DOCKER_PASSWORD}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
        
        - name: Push Docker image
          run: docker push ${{secrets.DOCKER_USERNAME}}/golang-app:latest
    
    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Setup kubectl
          uses: azure/setup-kubectl@v1
          with:
            version: 'latest'
        
    #     - name: Configure kubectl and Test Setup
    #       run: |
    #         echo "kubectl version"
    #         kubectl version --client
    #         echo "kubectl info"
    #         kubectl cluster-info
    #         echo "get pod -n kube-system"
    #         kubectl get pods -n kube-system  # Test kubectl setup
    
    #     - name: Apply ArgoCD Application
    #       run: |
    #         kubectl config view
    #         kubectl config current-context
    #         echo "get argocd pod"
    #         kubectl get pods -n argocd  # Verify ArgoCD pods are running
    #         kubectl apply -f argocd/application.yaml --validate=false
      
    #     #   env:
    #     #     KUBECONFIG: ${{secrets.KUBECONFIG}}
            

        - name: Deploy to k8s
        #   env:
        #      KUBECONFIG: ${{secrets.KUBECONFIG}}
          run: |
            ls
            kubectl apply -f k8s/helm/deployment.yaml